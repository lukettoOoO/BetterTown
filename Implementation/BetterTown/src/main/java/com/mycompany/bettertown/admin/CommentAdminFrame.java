/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.bettertown.admin;

import com.mycompany.bettertown.IssueData;
import com.mycompany.bettertown.login.DatabaseLogic;
import com.mycompany.bettertown.login.ProfileData;
import com.mycompany.bettertown.user.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author luca and bia <3
 */
public class CommentAdminFrame extends javax.swing.JFrame {

    private List<com.mycompany.bettertown.user.Comment> loadedComments = new ArrayList<com.mycompany.bettertown.user.Comment>();
    private IssueData currentIssue;
    private ProfileData currentUser;
    //Vezi sa nu lasi astea doua pe null
    private ProfileData loggedUser;
    public void loadComments(IssueData issue)
    {
        loadedComments = DatabaseLogic.getCommentForIssue(issue);
        DefaultListModel<String> model= new DefaultListModel<>();
        for(com.mycompany.bettertown.user.Comment c : loadedComments){
            model.addElement(c.getTitle());
        }
        CommentsList.setModel(model);
        System.out.println("Loaded comments: " + loadedComments.size());
    }
    
    public void setLoggedInUser(ProfileData user) {
        this.loggedUser = user;
    }
    public void setCurrentIssue(IssueData issue)
    {
        this.currentIssue=issue;
    }
    
    public CommentAdminFrame() {
        initComponents();
        CommentsList.setModel(new DefaultListModel<>());
        CommentsList.addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()) {
                int selectedIndex = CommentsList.getSelectedIndex();
                if (selectedIndex >= 0 && selectedIndex < loadedComments.size()) {
                    com.mycompany.bettertown.user.Comment selected = loadedComments.get(selectedIndex);

                    TitleLabel.setText("Title: " + selected.getTitle());
                    //Modifica aici sa a apara user, fa metoda in database getUserById
                    //UserLabel.setText("User: " + selected.getUserId());
                    currentUser = DatabaseLogic.getUserById(selected.getUserId());
                    if (currentUser != null) {
                        UserLabel.setText("User: " + currentUser.getName());
                    } else {
                        UserLabel.setText("User: [Unknown]");
                          }
                                        DateLabel.setText("Date: " + selected.getDate().toString());
                                        CommentsViewList.setText(selected.getContent());
                                    }
                                }
                            }
                        });
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        CommentsLabel = new javax.swing.JLabel();
        CommentsScroll = new javax.swing.JScrollPane();
        CommentsList = new javax.swing.JList<>();
        CommentViewLabel = new javax.swing.JLabel();
        TitleLabel = new javax.swing.JLabel();
        UserLabel = new javax.swing.JLabel();
        DateLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        CommentsViewScroll = new javax.swing.JScrollPane();
        CommentsViewList = new javax.swing.JTextArea();
        TitleLabelAdd = new javax.swing.JLabel();
        TitleTextFieldAdd = new javax.swing.JTextField();
        CommentLabelAdd = new javax.swing.JLabel();
        AddComment = new javax.swing.JButton();
        CommentScrollAdd = new javax.swing.JScrollPane();
        CommentEditorPaneAdd = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        CommentsLabel.setText("Comments (by title):");

        CommentsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        CommentsScroll.setViewportView(CommentsList);

        CommentViewLabel.setText("Comment View:");

        TitleLabel.setText("Title:");

        UserLabel.setText("User:");

        DateLabel.setText("Date:");

        jSeparator1.setForeground(new java.awt.Color(0, 204, 255));

        CommentsViewList.setEditable(false);
        CommentsViewList.setColumns(20);
        CommentsViewList.setRows(5);
        CommentsViewScroll.setViewportView(CommentsViewList);

        TitleLabelAdd.setText("Title:");

        CommentLabelAdd.setText("Comment:");

        AddComment.setText("Add Comment");
        AddComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCommentActionPerformed(evt);
            }
        });

        CommentScrollAdd.setViewportView(CommentEditorPaneAdd);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CommentsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CommentsLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DateLabel)
                            .addComponent(CommentViewLabel)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(TitleLabel)
                                .addGap(118, 118, 118)
                                .addComponent(UserLabel)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(CommentsViewScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TitleLabelAdd)
                    .addComponent(CommentLabelAdd))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TitleTextFieldAdd)
                    .addComponent(CommentScrollAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddComment)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CommentsLabel)
                    .addComponent(CommentViewLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(CommentsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TitleLabel)
                            .addComponent(UserLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CommentsViewScroll)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TitleLabelAdd)
                            .addComponent(TitleTextFieldAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CommentLabelAdd)
                            .addComponent(CommentScrollAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(AddComment)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCommentActionPerformed
       String title = TitleTextFieldAdd.getText().trim();
        String content = CommentEditorPaneAdd.getText().trim();
        
        if(title.isEmpty() || content.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Title and content should not be blank");
            return;
        }
        
        com.mycompany.bettertown.user.Comment comment = new com.mycompany.bettertown.user.Comment();
        comment.setTitle(title);
        comment.setContent(content);
        System.out.println(currentIssue.getTitle());
        comment.setIssueId(currentIssue.getId());
        System.out.println("ID User: "+loggedUser.getId());
        comment.setUserId(loggedUser.getId());
        comment.setDate(new Date());
        
        DatabaseLogic.addComment(comment);
        loadedComments.add(0,comment);
        
        DefaultListModel<String> model = (DefaultListModel<String>) CommentsList.getModel();
        model.add(0,comment.getTitle());
        CommentsList.setSelectedIndex(0);
        //Reseteaza field urile pentru add comments
        TitleTextFieldAdd.setText("");
        CommentEditorPaneAdd.setText("");
    }//GEN-LAST:event_AddCommentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CommentAdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CommentAdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CommentAdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CommentAdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CommentAdminFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddComment;
    private javax.swing.JEditorPane CommentEditorPaneAdd;
    private javax.swing.JLabel CommentLabelAdd;
    private javax.swing.JScrollPane CommentScrollAdd;
    private javax.swing.JLabel CommentViewLabel;
    private javax.swing.JLabel CommentsLabel;
    private javax.swing.JList<String> CommentsList;
    private javax.swing.JScrollPane CommentsScroll;
    private javax.swing.JTextArea CommentsViewList;
    private javax.swing.JScrollPane CommentsViewScroll;
    private javax.swing.JLabel DateLabel;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JLabel TitleLabelAdd;
    private javax.swing.JTextField TitleTextFieldAdd;
    private javax.swing.JLabel UserLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
