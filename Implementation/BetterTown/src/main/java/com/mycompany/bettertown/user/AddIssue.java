/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.bettertown.user;

import com.mycompany.bettertown.IssueData;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JFrame;
import javax.swing.*;

/**
 *
 * @author luca
 */
public class AddIssue extends javax.swing.JFrame {

    /**
     * Creates new form AddIssue
     */
    private AddIssueListener listener;
    private ImageIcon image;

    
    public AddIssue(AddIssueListener listener) {
        initComponents();
        this.listener = listener;
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
       
               
        LocalTime currentTime = LocalTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        String formattedTime = currentTime.format(formatter);
        this.dateLabel.setText(LocalDate.now().toString() + " " + formattedTime);
        this.priorityLabel.setText("0");
        this.statusLabel.setText("Not resolved");
        if(statusLabel.getText().equals("Not resolved"))
        {
            statusLabel.setForeground(Color.RED);
        }
        else if(statusLabel.getText().equals("In progress"))
        {
            statusLabel.setForeground(Color.YELLOW);
        }
        else if(statusLabel.getText().equals("Resolved"))
        {
            statusLabel.setForeground(Color.GREEN);
        }
        
        confirmButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String title = titleTextField.getText();
                String description = descriptionEditorPane.getText();
                String city = cityTextField.getText();
                String address = addressEditorPane.getText();
                String userName = userNameTextField.getText();
                String status = statusLabel.getText();
                String priority = priorityLabel.getText();
                String photoPath = photoNameLabel.getText();
                
                if(titleTextField.getText().equals("") || descriptionEditorPane.getText().equals("") || image == null)
                {
                    JFrame messageFrame = new JFrame("Information Needed");
                    messageFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                    JLabel messageLabel = new JLabel("Please enter a full title and description and upload a photo!", SwingConstants.CENTER);
                    messageLabel.setFont(new Font(".AppleSystemUIFont", Font.PLAIN, 11));
                    messageFrame.getContentPane().add(messageLabel);
                    messageFrame.setSize(400, 100);
                    messageFrame.setLocationRelativeTo(null);
                    messageFrame.setVisible(true);
                }
                else
                {
                    IssueData newIssue = new IssueData(title, description, image, Integer.parseInt(priority), city, address, LocalDateTime.now(), userName, status, 0.0, 0.0);
                
                    if(listener != null)
                    {
                        listener.onIssueAdded(newIssue);
                    }

                    dispose();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        titleTextField = new javax.swing.JTextField();
        UploadButton = new javax.swing.JButton();
        photoNameLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        priorityLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        descriptionEditorPane = new javax.swing.JEditorPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        addressEditorPane = new javax.swing.JEditorPane();
        jLabel9 = new javax.swing.JLabel();
        userNameTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        confirmButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 17)); // NOI18N
        jLabel1.setText("Add an issue:");

        jLabel2.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel2.setText("Title:");

        jLabel3.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel3.setText("Description:");

        jLabel4.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel4.setText("Photo:");

        titleTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        UploadButton.setText("Upload...");
        UploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadButtonActionPerformed(evt);
            }
        });

        photoNameLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 2, 13)); // NOI18N
        photoNameLabel.setForeground(new java.awt.Color(102, 102, 102));
        photoNameLabel.setText("No photo uploaded");
        photoNameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                photoNameLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                photoNameLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                photoNameLabelMouseExited(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel5.setText("Date:");

        cityTextField.setEditable(false);
        cityTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel6.setText("Address:");

        jLabel7.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel7.setText("City:");

        dateLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 2, 13)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(102, 102, 102));

        jLabel8.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel8.setText("Priority:");

        priorityLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N

        descriptionEditorPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        descriptionEditorPane.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        jScrollPane3.setViewportView(descriptionEditorPane);

        addressEditorPane.setEditable(false);
        addressEditorPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        addressEditorPane.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 11)); // NOI18N
        jScrollPane4.setViewportView(addressEditorPane);

        jLabel9.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel9.setText("User name:");

        userNameTextField.setEditable(false);
        userNameTextField.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        userNameTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel10.setText("Status:");

        statusLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(statusLabel)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(59, 59, 59)
                                    .addComponent(titleTextField))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane3))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cityTextField)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                    .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(21, 21, 21))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(userNameTextField))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(priorityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(UploadButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(photoNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(confirmButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(priorityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(statusLabel))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(UploadButton)
                    .addComponent(photoNameLabel))
                .addGap(18, 18, 18)
                .addComponent(confirmButton)
                .addGap(18, 18, 18))
        );

        if(statusLabel.getText().equals("Not resolved"))
        {
            statusLabel.setForeground(Color.RED);
        }
        else if(statusLabel.getText().equals("In progress"))
        {
            statusLabel.setForeground(Color.YELLOW);
        }
        else if(statusLabel.getText().equals("Resolved"))
        {
            statusLabel.setForeground(Color.GREEN);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void UploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileUpload = new JFileChooser();
        fileUpload.setCurrentDirectory(new File("."));
        
        int res = fileUpload.showSaveDialog(null);
        if(res == JFileChooser.APPROVE_OPTION)
        {
            File filePath = new File(fileUpload.getSelectedFile().getAbsolutePath());

            //only .png files are supported
            if(filePath.toString().endsWith(".png"))
            {
                System.out.println(filePath);
                image = new ImageIcon(filePath.toString());
                this.photoNameLabel.setText(extractLast(filePath.toString()));
            }
            else
            {
                JFrame frame = new JFrame("File Support");
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.setSize(300, 100);
                frame.setLocationRelativeTo(null);
                JLabel messageLabel = new JLabel("Only .png files are supported!", SwingConstants.CENTER);
                messageLabel.setFont(new Font(".AppleSystemUIFont", Font.BOLD, 13));
                frame.getContentPane().add(messageLabel);
                frame.setVisible(true);
            }
        }
    }//GEN-LAST:event_UploadButtonActionPerformed

    private void photoNameLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_photoNameLabelMouseClicked
        // TODO add your handling code here:
        if(!this.photoNameLabel.getText().equals("No photo uploaded"))
        {
            PhotoView photoViewer = new PhotoView();
            photoViewer.setImage(image);
            photoViewer.show();
        }
    }//GEN-LAST:event_photoNameLabelMouseClicked

    private void photoNameLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_photoNameLabelMouseEntered
        // TODO add your handling code here:
        if(!this.photoNameLabel.getText().equals("No photo uploaded"))
            this.photoNameLabel.setText("<html><u>" + this.photoNameLabel.getText() + "</u><html>");
    }//GEN-LAST:event_photoNameLabelMouseEntered

    private void photoNameLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_photoNameLabelMouseExited
        // TODO add your handling code here:
        if(!this.photoNameLabel.getText().equals("No photo uploaded"))
        {
            String currentText = this.photoNameLabel.getText();
            String nonUnderlinedText = currentText.replaceAll("<[/]?u>", "");
            nonUnderlinedText = nonUnderlinedText.replaceAll("<[/]?html>", "");
            this.photoNameLabel.setText(nonUnderlinedText);
        }
    }//GEN-LAST:event_photoNameLabelMouseExited
    
     public static String extractLast(String path) {
        if (path == null || path.trim().isEmpty()) 
        {
            return "";
        }
        String normalizedPath = path.replace("\\", "/");
        String[] components = normalizedPath.split("/");
        if (components.length > 0) {
            return components[components.length - 1];
        } else {
            return "";
        }
    }
    
    public void setCity(String city)
    {
        cityTextField.setText(city);
    }
    
    public void setAddress(String address)
    {
        addressEditorPane.setText(address);
    }
    
    public void setUserName(String name)
    {
        userNameTextField.setText(name);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddIssue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddIssue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddIssue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddIssue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new AddIssue(new AddIssueListener() {
                @Override
                public void onIssueAdded(IssueData issue) {
                    System.out.println("New issue added: " + issue.getTitle());
                }
            }).setVisible(true);
        }
        }); 

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UploadButton;
    private javax.swing.JEditorPane addressEditorPane;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JEditorPane descriptionEditorPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel photoNameLabel;
    private javax.swing.JLabel priorityLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTextField titleTextField;
    private javax.swing.JTextField userNameTextField;
    // End of variables declaration//GEN-END:variables
}